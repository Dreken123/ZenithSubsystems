@name Zenith YAW Meters
@inputs E:wirelink PropReference:wirelink
@outputs Yaw
@persist Yaw Text X Angle1 Angle2 Angle3 Angle4 Angle5 Angle6 Angle7 Angle8 Angle9

if (first())
{
X = 0

X++   
E:egpBox(X,vec2(0,0),vec2(1024,1024))
E:egpColor(X,vec(165,35,3))
X++
E:egpCircle(X,vec2(256,256),vec2(254,254))
E:egpColor(X,vec(255,255,255))
X++
E:egpCircle(X,vec2(256,256),vec2(250,250))
E:egpColor(X,vec())
X++
E:egpTextLayout(X,"YAW",vec2(395,-7),vec2(300,80))
E:egpSize(X,56)
E:egpColor(X,vec())
X++
Text = X
E:egpTextLayout(X,"" +Yaw*(-1),vec2(5,5),vec2(300,60))
E:egpSize(X,60)
E:egpColor(X,vec())
X++
E:egpLine(X,vec2(115,256),vec2(395,256))
E:egpColor(X,vec(0,255,0))
X++
E:egpLine(X,vec2(256,395),vec2(256,115))
E:egpColor(X,vec(0,255,0))

J=0 #A number used to check if the object should be made extra large

#Create all the numbers and lines
for(I=0,180,5) 
{
    J++
    
    #For making every third element slightly larger
    IsThird = (J%2) == 0
        
    #Calculate angle for position
    Angle = I/180*180
    
    #Give the larger texts a little offset
    Offset = 0
    if (IsThird) 
    {
        if (I > 100 || I < 100) {Offset = 32} 
        else {Offset = 5}
    }
    Pos = vec2(256,256) + vec2(226-Offset,0):rotate(Angle)
    
    #Create text
    X++
    if (I == 0) {E:egpText(X,"0",Pos)}
    else {E:egpText(X,""+I,Pos)}
    if (I == 180) {E:egpText(X,"",Pos)}
    E:egpAlign(X,1,1)
    E:egpSize(X,( IsThird ? 15 : 25 ))
    E:egpColor(X,vec(0,120,0))
    
    #Create line
    X++
    LinePos1 = vec2(256,256) + vec2(150,0):rotate(Angle)
    LinePos2 = vec2(256,256) + vec2(190 + (!IsThird ? 15 : -10),0):rotate(Angle)
    E:egpLine(X,LinePos1,LinePos2)
    E:egpSize(X,(IsThird ? 1 : 5))
    E:egpColor(X,vec(0,120,0))
}

K=0 #A number used to check if the object should be made extra large

#Create all the numbers and lines
for(L=0,180,5) 
{
    K++
    
    #For making every third element slightly larger
    IsSecond = (K%2) == 0
        
    #Calculate angle for position
    Angles = L/180*-180
    
    #Give the larger texts a little offset
    Offsets = 0
    if (IsSecond) 
    {
        if (L > 100 || L < 100) {Offsets = 32} 
        else {Offsets = 5}
    }
    Poss = vec2(256,256) + vec2(226-Offsets,0):rotate(Angles)
    
    #Create text
    X++
    if (L == 0) {E:egpText(X,"",Poss)}
    else {E:egpText(X,""+-L,Poss)}
    E:egpAlign(X,1,1)
    E:egpSize(X,( IsSecond ? 15 : 25 ))
    E:egpColor(X,vec(0,120,0))
    
    #Create line
    X++
    LinePos11 = vec2(256,256) + vec2(150,0):rotate(Angles)
    LinePos22 = vec2(256,256) + vec2(190 + (!IsSecond ? 15 : -10),0):rotate(Angles)
    E:egpLine(X,LinePos11,LinePos22)
    E:egpSize(X,(IsSecond ? 1 : 5))
    E:egpColor(X,vec(0,120,0))
}

X++
Angle8 = X
E:egpRoundedBox(X,vec2(80,256),vec2(70,2))
E:egpColor(X,vec(255,255,0))
X++
Angle1 = X
E:egpRoundedBox(X,vec2(256,256),vec2(320,80))
E:egpColor(X,vec(60,60,60))
X++
Angle2 = X
E:egpRoundedBox(X,vec2(195,256),vec2(60,160))
E:egpColor(X,vec(60,60,60))
X++
Angle3 = X
E:egpRoundedBox(X,vec2(320,256),vec2(60,160))
E:egpColor(X,vec(60,60,60))
X++
Angle4 = X
E:egpRoundedBox(X,vec2(246,170),vec2(275,40))
E:egpColor(X,vec(60,60,60))
X++
Angle5 = X
E:egpRoundedBox(X,vec2(246,343),vec2(275,40))
E:egpColor(X,vec(60,60,60))
X++
Angle6 = X
E:egpRoundedBoxOutline(X,vec2(100,256),vec2(80,60))
E:egpColor(X,vec(60,60,60))
E:egpSize(X,10)
X++
Angle7 = X
E:egpRoundedBox(X,vec2(415,256),vec2(80,90))
E:egpColor(X,vec(60,60,60))
}

interval(100)

Yaw = PropReference:entity():angles():yaw()  
Yaw = ceil(Yaw)

if (Yaw == 180) {E:egpSetText(Text,"180")}
else {E:egpSetText(Text,""+-Yaw)}
if (Yaw == 0) {E:egpSetText(Text,"0")}
E:egpAngle(Angle1,Yaw) 
E:egpAngle(Angle2,vec2(256,256),vec2(60,0),Yaw)
E:egpAngle(Angle3,vec2(256,256),vec2(-60,0),Yaw)
E:egpAngle(Angle4,vec2(256,256),vec2(10,-88),Yaw)
E:egpAngle(Angle5,vec2(256,256),vec2(10,88),Yaw) 
E:egpAngle(Angle6,vec2(256,256),vec2(+140,0),Yaw)
E:egpAngle(Angle7,vec2(256,256),vec2(-160,0),Yaw) 
E:egpAngle(Angle8,vec2(256,255),vec2(177,0),Yaw)
